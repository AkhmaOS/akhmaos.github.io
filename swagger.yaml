swagger: "2.0"
info:
  description: "perevod payment api"
  title: perevod
  version: 0.0.1
consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
host: api-dev.perevod.io

securityDefinitions:
  sdkKey:
    description: SDK auth for bussiness clients
    type: apiKey
    in: header
    name: SDK-API-Key
  authKey:
    description: JWT Auth for clients
    type: apiKey
    in: header
    name: Authorization

security:
  - sdkKey: []

paths:
  /healthCheck:
    get:
      tags:
        - Standard
      security:
        - { }
      operationId: healthCheck
      responses:
        200:
          description: ok
          schema:
            type: object
            properties:
              ok:
                type: boolean
  /businessAuthCheck:
    get:
      tags:
        - Standard
      security:
        - sdkKey: []
      operationId: authCheck
      responses:
        200:
          description: ok
          schema:
            type: object
            properties:
              ok:
                type: boolean
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /business/add:
    post:
      tags:
        - Business (Admin | Manager)
      operationId: business connect to platform
      security:
        - authKey: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              businessLegalName:
                description: business legal name
                example: "Кофейня Гостинная"
                type: string
              phoneNumber:
                description: Phone number of business
                example: "7999231123"
                type: string
              ownerLegalName:
                description: legal name of busines owner
                example: "Магомедов Магомед"
                type: string
              agreementDocumentUri:
                description: url to agreement document
                type: string
      responses:
        200:
          description: business succesfully added
          schema:
            $ref: "#/definitions/business"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /business/suspend:
    post:
      tags:
        - Business (Admin | Manager)
      operationId: make business suspend of platform
      security:
        - authKey: [ ]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                description: id of business
                example: 10
                type: number

      responses:
        200:
          description: business succesfully suspended

        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /business/delete:
    post:
      tags:
        - Business (Admin | Manager)
      operationId: delete business from platform
      security:
        - authKey: [ ]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                description: id of business
                example: 10
                type: number
      responses:
        200:
          description: business succesfully deleted
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /business/{businessUid}:
    get:
      tags:
        - Business
      operationId: Gets a user by ID.
      security:
        - authKey: [ ]
      parameters:
        - in: path
          name: businessUid
          type: string
          required: true
          description: uid of business
      responses:
        200:
          description: business
          schema:
            $ref: "#/definitions/business"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /business/list:
    post:
      tags:
        - Business (Admin | Maganer)
      operationId: list of business
      security:
        - authKey: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams"
      responses:
        200:
          description: business list
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: "#/definitions/business"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /cashier/add:
    post:
      tags:
        - Cashier (Admin | Manager)
      operationId: add new cashier to platform
      security:
        - authKey: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              businessUuid:
                description: id of business
                example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
                type: string
              address:
                description: cashier location
                example: "Героев Дагестана 8"
                type: string
              openFrom:
                description: shop work start time
                example: 1000
                type: number
              openTo:
                description: shop work end time
                example: 2000
                type: number
              sdkKey:
                description: sdk key of cashier
                example: "test"
                type: string
              sdkVersion:
                description: sdk version
                example: "1.0"
                type: string
      responses:
        200:
          description: cashier succesfully added
          schema:
            $ref: "#/definitions/cashier"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cashier/suspend:
    post:
      tags:
        - Cashier (Admin | Manager)
      operationId: make cahier suspend on platform
      security:
        - authKey: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                description: uuid of business
                example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
                type: string
      responses:
        200:
          description: cashier succesfully suspended
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cashier/delete:
    post:
      tags:
        - Cashier (Admin | Manager)
      operationId: delete cahier
      security:
        - authKey: [ ]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                description: uuid of business
                example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
                type: string
      responses:
        200:
          description: business succesfully suspended
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cashier/{cashierUuid}:
    get:
      tags:
        - Cashier (Business | Admin | Manager)
      operationId: get cashier by uuid
      security:
        - authKey: [ ]
      parameters:
        - in: path
          name: cashierUuid
          type: string
          required: true
          description: uid of cashier
      responses:
        200:
          description: cashier
          schema:
            $ref: "#/definitions/cashier"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cashier/list:
    post:
      tags:
        - Cashier (Business | Admin | Manager)
      operationId: list of cashier
      security:
        - authKey: [ ]
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams"
      responses:
        200:
          description: cashier list
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: "#/definitions/cashier"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cashier/connect:
    post:
      tags:
        - Cashier
      operationId: Cashier Connect
      summary: For check cashier auth
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              deviceId:
                description: id of device
                example: "321321"
                type: string
      responses:
        200:
          description: success response for connect
          schema:
            $ref: "#/definitions/cashierConnect"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /payment/casher/init:
    post:
      tags:
        - Payment (Cashier)
      operationId: casher init payment
      security:
        - sdkKey: []
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              amount:
                description: amount of payment
                example: "102.32"
                type: string
              currency:
                description: currency name
                example: "rub"
                type: string
              payload:
                description: json of the order (some fields)
                example: {
                  "some_filed": "some_data"
                }
                type: object

      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/paymentInit"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /payment/casher/print:
    get:
      tags:
        - Payment (Cashier)
      operationId: casher print payment
      security:
        - sdkKey: []
      parameters:
        - in: query
          name: orderUid
          type: string
          required: true
          description: uid of order
        - in: query
          name: type
          required: true
          type: string
          description: paper | screen
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/paymentPrint"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        403:
          description: permission denied
          schema:
            $ref: "#/definitions/permissionDenied"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /payment/crypto/init:
    post:
      tags:
        - Payment (Client)
      operationId: crypto init payment
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              network:
                description: network name
                example: eth
                type: string
              token:
                description: token name
                example: eth
                type: string
              orderUid:
                description: uid of order
                example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
                type: string
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/paymentCryptoInit"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /payment/crypto/approve:
    post:
      tags:
        - Payment (Client)
      operationId: crypto approve payment
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              orderUid:
                description: uid of order
                example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
                type: string
              txHash:
                description: hash of tx
                example: "0x49ce4bbfcb1354100a6c3e4d97047e39d05e20a1e67bf8b6093d28f54a96de61"
                type: string
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/paymentCryptoApprove"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /payment/crypto/validate:
    post:
      tags:
        - Payment (Client)
      operationId: check transaction validate
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              orderUid:
                description: uid of order
                example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
                type: string
              txHash:
                description: transaction hash
                example: "0x49ce4bbfcb1354100a6c3e4d97047e39d05e20a1e67bf8b6093d28f54a96de61"
                type: string
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/paymentCheck"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/badRequest"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/internalServerError"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"


definitions:
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: either same as HTTP Status Code OR >= 600.
        type: integer
        format: int32
      message:
        type: string
  permissionDenied:
    type: object
    required:
      - code
      - message
    properties:
      code:
        default: 403
        type: integer
        format: int32
      message:
        description: permission denied reason
        default: permission denied
        type: string
  badRequest:
    type: object
    required:
      - code
      - message
    properties:
      code:
        default: 400
        type: integer
        format: int32
      message:
        description: bad request reason
        default: bad request
        type: string
  internalServerError:
    type: string
  paymentCryptoInit:
    type: object
    required:
      - network
      - token
      - orderUid
      - wallet
      - tokenedAmount
    properties:
      network:
        description: network name
        type: string
        example: eth
      token:
        description: token name
        example: eth
        type: string
      orderUid:
        description: uid of order
        example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
        type: string
      wallet:
        description: wallet address
        example: "0x690b9a9e9aa1c9db991c7721a92d351db4fac990"
        type: string
      tokenedAmount:
        description: count of tokens for order
        example: "0.001"
        type: string
  paymentInit:
    type: object
    required:
      - orderUuid
    properties:
      orderUid:
        description: uuid of order
        example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
        type: string
  paymentCheck:
    type: object
    required:
      - orderUid
      - txHash
      - approveProgress
      - approvesCount
    properties:
      txHash:
        description: hash of transaction
        example: "0x49ce4bbfcb1354100a6c3e4d97047e39d05e20a1e67bf8b6093d28f54a96de61"
        type: string
      orderUid:
        description: uid of order
        example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
        type: string
      approveProgress:
        description: current approved counts
        example: 3
        type: number
      approvesCount:
        description: max approves count
        example: 10
        type: number
  paymentCryptoApprove:
    type: object
    required:
      - rps
      - token
      - txHash
      - orderUid
      - tokenedAmount
    properties:
      txHash:
        description: hash of tx
        example: "0x49ce4bbfcb1354100a6c3e4d97047e39d05e20a1e67bf8b6093d28f54a96de61"
        type: string
      orderUid:
        description: uid of order
        example: "00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
        type: string
      token:
        description: token name
        example: eth
        type: string
      tokenedAmount:
        description: count of tokens for order
        example: "0.001"
        type: string
      rps:
        description: requeest per seconds for order validate
        example: 10
        type: number
  paymentPrint:
    type: object
    required:
      - payload
    properties:
      paperType:
        description: payload if chosed type is paper print
        example: '{
                  "type": "print",
                  "payload": {
                    "uuid": 46464646,
                    "request": [
                      {
                        "type": "nonFiscal",
                        "items": [
                          {
                            "type": "text",
                            "text": "Текст свободной форме",
                            "alignment": "left | center | right"
                          },
                          {
                            "type": "barcode",
                            "barcode": "тут гр код",
                            "barcodeType": "QR",
                            "scale": 6
                          }
                        
                        ]
                      }
                    ]
                  }
                }'
        type: object
      screenType:
        description: payload if chosed type is paper print
        example: "https://someurl.perevod.io/00ff1c0e-f0c2-41b1-b940-224995c8bdfe"
  listParams:
    type: object
    description: params for list method
    properties:
      limit:
        type: integer
        minimum: 1
      offset:
        type: integer
        minimum: 0
      filterGroups:
        type: array
        items:
          $ref: "#/definitions/filterGroup"
      sortBy:
        type: string
      orderBy:
        type: string
        enum: [ ASC, DESC ]
  filterGroup:
    type: object
    description: params for grouping filters
    properties:
      key:
        type: string
      logicFilter:
        description: "Comparing option: true == 'AND', false == 'OR'"
        type: boolean
      filters:
        type: array
        items:
          $ref: "#/definitions/filter"

  filter:
    type: object
    properties:
      value:
        type: string
      operator:
        description: "enum ==, !=, <, >, <=, >=, in, !in"
        type: string
      ignoreCase:
        type: boolean

  business:
    type: object
    properties:
      value:
        type: string
      operator:
        description: "enum ==, !=, <, >, <=, >=, in, !in"
        type: string
      ignoreCase:
        type: boolean
  cashier:
    type: object
    properties:
      value:
        type: string
      operator:
        description: "enum ==, !=, <, >, <=, >=, in, !in"
        type: string
      ignoreCase:
        type: boolean
  cashierConnect:
    type: object
    properties:
      sdkKey:
        type: string
        example: "test-test"
        description: unique sdk key for cahier




